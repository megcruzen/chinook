1. Provide a query showing Customers (just their full names, customer ID and country) who are not in the US.

SELECT FirstName, LastName, CustomerId, Country
FROM Customer
WHERE Country != 'USA'

2. Provide a query only showing the Customers from Brazil.

SELECT FirstName, LastName, CustomerId, Country
FROM Customer
WHERE Country = 'Brazil'

3. Provide a query showing the Invoices of customers who are from Brazil. The resultant table should show the customer's full name, Invoice ID, Date of the invoice and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM Customer c
LEFT JOIN Invoice i ON i.CustomerId = c.CustomerId
WHERE Country = 'Brazil'

4. Provide a query showing only the Employees who are Sales Agents.

SELECT CONCAT(FirstName, ' ' , LastName) AS EmployeeName, Title
FROM Employee
WHERE Title = 'Sales Support Agent'

5. Provide a query showing a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
FROM Invoice

6. Provide a query that shows the invoices associated with each sales agent. The resultant table should include the Sales Agent's full name.

SELECT CONCAT(e.FirstName, ' ' , e.LastName) AS Agent, i.InvoiceId, i.InvoiceDate
FROM Employee e
LEFT JOIN Customer c ON c.SupportRepId = e.EmployeeId
LEFT JOIN Invoice i ON i.CustomerId = c.CustomerId
WHERE e.Title = 'Sales Support Agent'

7.  Provide a query that shows the Invoice Total, Customer name, Country and Sale Agent name for all invoices and customers.

SELECT i.InvoiceId, i.InvoiceDate, i.Total, 
		CONCAT(c.FirstName, ' ' , c.LastName) AS Customer,
		i.BillingCountry, 
		CONCAT(e.FirstName, ' ', e.LastName) AS Agent
FROM Invoice i
LEFT JOIN Customer c ON c.CustomerId = i.CustomerId
LEFT JOIN Employee e ON e.EmployeeId = c.SupportRepId
WHERE e.Title = 'Sales Support Agent'


8. How many Invoices were there in 2009 and 2011?

SELECT COUNT(CASE WHEN InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31' THEN 1 ELSE NULL END) AS Invoices2009,
COUNT(CASE WHEN InvoiceDate BETWEEN '2011-01-01' AND '2011-12-31' THEN 1 ELSE NULL END) AS Invoices2011
FROM Invoice

9. What are the respective total sales for each of those years?

SELECT SUM(CASE WHEN Total > 0 AND InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31' THEN Total ELSE 0 END) as Totals2009,
SUM(CASE WHEN Total > 0 AND InvoiceDate BETWEEN '2011-01-01' AND '2011-12-31' THEN Total ELSE 0 END) as Totals2011
FROM Invoice

10. Looking at the InvoiceLine table, provide a query that COUNTs the number of line items for Invoice ID 37.

SELECT COUNT(InvoiceLineId) AS NumLineItems
FROM InvoiceLine
WHERE InvoiceId = 37

11. Looking at the InvoiceLine table, provide a query that COUNTs the number of line items for each Invoice.

SELECT InvoiceId, COUNT(InvoiceLineId) AS NumLineItems
FROM InvoiceLine
GROUP BY InvoiceId

12. Provide a query that includes the purchased track name with each invoice line item.

SELECT i.InvoiceId, il.InvoiceLineId, t.[Name]
FROM Invoice i
LEFT JOIN InvoiceLine il ON il.InvoiceId = i.InvoiceId
LEFT JOIN Track t ON t.TrackId = il.TrackId
ORDER BY i.InvoiceId

13. Provide a query that includes the purchased track name AND artist name with each invoice line item.

SELECT i.InvoiceId, il.InvoiceLineId, t.[Name], ar.[Name]
FROM Invoice i
LEFT JOIN InvoiceLine il ON il.InvoiceId = i.InvoiceId
LEFT JOIN Track t ON t.TrackId = il.TrackId
LEFT JOIN Album a ON a.AlbumId = t.AlbumId
LEFT JOIN Artist ar ON ar.ArtistId = a.ArtistId
ORDER BY i.InvoiceId

14.  Provide a query that shows the # of invoices per country.

SELECT BillingCountry, COUNT(*) AS NumInvoices
FROM Invoice
GROUP BY BillingCountry

15. Provide a query that shows the total number of tracks in each playlist. The Playlist name should be include on the resulant table.

SELECT pl.[Name], COUNT(pt.TrackId) AS TrackCount
FROM Playlist pl
LEFT JOIN PlaylistTrack pt ON pt.PlaylistId = pl.PlaylistId
GROUP BY pl.[Name]

